<Pag ux:Class="ShowDataPage">
   <Router ux:Dependency="router" />

   <JavaScript >
   var Observable = require("FuseJS/Observable");

   var result = Observable();
   var data = Observable();
   //var items = Observable();

   var obj = this.Parameter;
   var d = Observable();
   var url = Observable();
   var defaultRotation = Observable(0);

   
   d = obj.map(function(xd) {
      url = "http://controlruta.ml/cafeteria/reporte/chartDataAPIV2/";
      url = url + xd;
      obtener(url);

      return xd;
   });

   function obtener(u){
      fetch(u).then(function(response) {
         return response.json();
      }).then(function(resultado) {
         data.value = resultado;
         result.replaceAll(data.value);
         items.replaceAll(data.value);
         items.map(function(i){
       		var lastItem = {
       			startAngle: 0,
       			endAngle: 0,
       			angle: 0
       		};
       		i.forEach(function(x, c) {
       			x.index = c;
       			x.angle = ((x.porc / 100) * 360);
       			if (c === 0) {
       				defaultRotation.value = x.angle / 2 + 90;
       			}
       			if (c > 0) {
       				lastItem.wheelRotate = (x.angle / 2) + (lastItem.angle / 2);
       			}

       			x.startAngle = lastItem.startAngle - x.angle;
       			x.endAngle = lastItem.startAngle;

       			x.isActive = Observable(function(){
       				return currentPage.value == x.index;
       			});

       			lastItem = x;

       		});
       		return i;
       	}).expand();
      }).catch(function(error) {
         console.log("error: " + error.message);
      });
   }



   var items = Observable([
   	{ porc: 25, color: "#4CD8FC" },
   	{ porc: 15, color: "#A943C1" },
   	{ porc: 30, color: "#FFCE6B" },
   	{ porc: 10, color: "#EB4CAF" },
   	{ porc: 20, color: "#33CB9F" }
   ]);

   function volver() {
      router.goBack();
   }

   var currentPage = Observable(0);

   function activated(arg) {
   	currentPage.value = arg.data.index;
   }



   module.exports = {
      result: result,
      volver: volver,
      d: d,
      items: items,
    	currentPage: currentPage,
    	activated: activated
   }

   </JavaScript>

   <DockPanel>
     <Grid ColumnCount="1" Dock="Bottom">
       <Boton Clicked="{volver}" Text="Regresar" FontSize="30" Width="200"/>
     </Grid>



     <ScrollView>

       <StackPanel Padding="10" ItemSpacing="10">
          <Texto FontSize="28" TextAlignment="Center" Dock="Top" Margin="0,5" Value="Ordenes último(s) {d} día(s)" />
          <Separator />
          <Separator />

          <Panel Height="220">
              <Panel ux:Name="wheelPanel">
                  <Panel ux:Name="wheel" Height="200" Margin="10,10,10,10" >
                      <Panel Alignment="Center" Width="200" Height="200">
                          <Circle Color="#192050" Width="25%" Height="25%"/>
                          <Each Items="{items}">
                              <Rectangle Width="5" Color="#192050" Height="50%" TransformOrigin="Anchor" Anchor="50%,0%">
                                  <Rotation Degrees="{endAngle} - 90"/>
                              </Rectangle>
                          </Each>
                          <Each Items="{items}">
                              <Circle ux:Name="piece" Color="{color}" StartAngleDegrees="{startAngle}" EndAngleDegrees="{endAngle}" Opacity=".3">
                                  <WhileTrue Value="{isActive}">
                                      <Change piece.Opacity="1" Duration="0.2"/>
                                  </WhileTrue>
                              </Circle>

                          </Each>
                          <Rotation Degrees="{defaultRotation}" />
                      </Panel>
                  </Panel>
              </Panel>

          </Panel>

          <Each Items="{result}">
            <StackPanel>
               <Texto Value="{label}: {value}" FontSize="25" />
            </StackPanel>
            <Separator />
          </Each>
       </StackPanel>
     </ScrollView>
   </DockPanel>
</Pag>
